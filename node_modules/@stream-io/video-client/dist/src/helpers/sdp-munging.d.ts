/**
 * Returns an SDP with the preferred codec in front of the other codecs.
 * Example: Suppose we want to prefer VP8
 * 1. find video media specification m=video 9 UDP/TLS/RTP/SAVPF 100 101 96 97 35 36 102 125 127
 * 2. look for specified codec (VP8)  a=rtpmap:96 VP8/90000
 * 3. extract 96 as an identifier of VP8
 * 4. move 96 to the front
 * 5. now media looks like this: m=video 9 UDP/TLS/RTP/SAVPF 96 100 101 97 35 36 102 125 127
 */
export declare const setPreferredCodec: (sdp: string, mediaType: 'video' | 'audio', preferredCodec: string) => string;
/**
 * Returns an SDP with the specified codec removed.
 * Example: Suppose we want to remove RED
 *  1. find audio media specification m=video 9 UDP/TLS/RTP/SAVPF 100 101 96 97 35 36 102 125 127
 *  2. look for specified codec (RED)  a=rtpmap:127 red/90000
 *  3. extract 127 as an identifier of RED
 *  4. remove 127 from the codec order
 *  5. remove a=rtpmap:127 red/90000
 *  6. remove a=fmtp:127 ...
 */
export declare const removeCodec: (sdp: string, mediaType: 'video' | 'audio', codecToRemove: string) => string;
/**
 * Returns an SDP with DTX enabled or disabled.
 */
export declare const toggleDtx: (sdp: string, enable: boolean) => string;
/**
 * Enables high-quality audio through SDP munging for the given trackMid.
 *
 * @param sdp the SDP to munge.
 * @param trackMid the trackMid.
 * @param maxBitrate the max bitrate to set.
 */
export declare const enableHighQualityAudio: (sdp: string, trackMid: string, maxBitrate?: number) => string;
