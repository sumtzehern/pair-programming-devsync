import type { BinaryReadOptions, BinaryWriteOptions, IBinaryReader, IBinaryWriter, PartialMessage } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
import { Struct } from '../../../google/protobuf/struct';
import { Timestamp } from '../../../google/protobuf/timestamp';
/**
 * CallState is the current state of the call
 * as seen by an SFU.
 *
 * @generated from protobuf message stream.video.sfu.models.CallState
 */
export interface CallState {
    /**
     * participants is the list of participants in the call.
     * In large calls, the list could be truncated in which
     * case, the list of participants contains fewer participants
     * than the counts returned in participant_count. Anonymous
     * participants are **NOT** included in the list.
     *
     * @generated from protobuf field: repeated stream.video.sfu.models.Participant participants = 1;
     */
    participants: Participant[];
    /**
     * started_at is the time the call session actually started.
     *
     * @generated from protobuf field: google.protobuf.Timestamp started_at = 2;
     */
    startedAt?: Timestamp;
    /**
     * participant_count contains the summary of the counts.
     *
     * @generated from protobuf field: stream.video.sfu.models.ParticipantCount participant_count = 3;
     */
    participantCount?: ParticipantCount;
    /**
     * the list of pins in the call.
     * Pins are ordered in descending order (most important first).
     *
     * @generated from protobuf field: repeated stream.video.sfu.models.Pin pins = 4;
     */
    pins: Pin[];
}
/**
 * @generated from protobuf message stream.video.sfu.models.ParticipantCount
 */
export interface ParticipantCount {
    /**
     * Total number of participants in the call including
     * the anonymous participants.
     *
     * @generated from protobuf field: uint32 total = 1;
     */
    total: number;
    /**
     * Total number of anonymous participants in the call.
     *
     * @generated from protobuf field: uint32 anonymous = 2;
     */
    anonymous: number;
}
/**
 * @generated from protobuf message stream.video.sfu.models.Pin
 */
export interface Pin {
    /**
     * the user to pin
     *
     * @generated from protobuf field: string user_id = 1;
     */
    userId: string;
    /**
     * the user sesion_id to pin, if not provided, applies to all sessions
     *
     * @generated from protobuf field: string session_id = 2;
     */
    sessionId: string;
}
/**
 * those who are online in the call
 *
 * @generated from protobuf message stream.video.sfu.models.Participant
 */
export interface Participant {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    userId: string;
    /**
     * @generated from protobuf field: string session_id = 2;
     */
    sessionId: string;
    /**
     * map of track id to track type
     *
     * @generated from protobuf field: repeated stream.video.sfu.models.TrackType published_tracks = 3;
     */
    publishedTracks: TrackType[];
    /**
     * @generated from protobuf field: google.protobuf.Timestamp joined_at = 4;
     */
    joinedAt?: Timestamp;
    /**
     * @generated from protobuf field: string track_lookup_prefix = 5;
     */
    trackLookupPrefix: string;
    /**
     * @generated from protobuf field: stream.video.sfu.models.ConnectionQuality connection_quality = 6;
     */
    connectionQuality: ConnectionQuality;
    /**
     * @generated from protobuf field: bool is_speaking = 7;
     */
    isSpeaking: boolean;
    /**
     * @generated from protobuf field: bool is_dominant_speaker = 8;
     */
    isDominantSpeaker: boolean;
    /**
     * @generated from protobuf field: float audio_level = 9;
     */
    audioLevel: number;
    /**
     * @generated from protobuf field: string name = 10;
     */
    name: string;
    /**
     * @generated from protobuf field: string image = 11;
     */
    image: string;
    /**
     * @generated from protobuf field: google.protobuf.Struct custom = 12;
     */
    custom?: Struct;
    /**
     * @generated from protobuf field: repeated string roles = 13;
     */
    roles: string[];
}
/**
 * @generated from protobuf message stream.video.sfu.models.StreamQuality
 */
export interface StreamQuality {
    /**
     * @generated from protobuf field: stream.video.sfu.models.VideoQuality video_quality = 1;
     */
    videoQuality: VideoQuality;
    /**
     * @generated from protobuf field: string user_id = 2;
     */
    userId: string;
}
/**
 * @generated from protobuf message stream.video.sfu.models.VideoDimension
 */
export interface VideoDimension {
    /**
     * @generated from protobuf field: uint32 width = 1;
     */
    width: number;
    /**
     * @generated from protobuf field: uint32 height = 2;
     */
    height: number;
}
/**
 * @generated from protobuf message stream.video.sfu.models.VideoLayer
 */
export interface VideoLayer {
    /**
     * for tracks with a single layer, this should be HIGH
     *
     * @generated from protobuf field: string rid = 1;
     */
    rid: string;
    /**
     * @generated from protobuf field: stream.video.sfu.models.VideoDimension video_dimension = 2;
     */
    videoDimension?: VideoDimension;
    /**
     * target bitrate, server will measure actual
     *
     * @generated from protobuf field: uint32 bitrate = 4;
     */
    bitrate: number;
    /**
     * @generated from protobuf field: uint32 fps = 5;
     */
    fps: number;
    /**
     * @generated from protobuf field: stream.video.sfu.models.VideoQuality quality = 6;
     */
    quality: VideoQuality;
}
/**
 * @generated from protobuf message stream.video.sfu.models.Codec
 */
export interface Codec {
    /**
     * @generated from protobuf field: uint32 payload_type = 1;
     */
    payloadType: number;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string fmtp_line = 3;
     */
    fmtpLine: string;
    /**
     * @generated from protobuf field: uint32 clock_rate = 4;
     */
    clockRate: number;
    /**
     * @generated from protobuf field: string encoding_parameters = 5;
     */
    encodingParameters: string;
    /**
     * @generated from protobuf field: repeated string feedbacks = 6;
     */
    feedbacks: string[];
}
/**
 * @generated from protobuf message stream.video.sfu.models.ICETrickle
 */
export interface ICETrickle {
    /**
     * @generated from protobuf field: stream.video.sfu.models.PeerType peer_type = 1;
     */
    peerType: PeerType;
    /**
     * @generated from protobuf field: string ice_candidate = 2;
     */
    iceCandidate: string;
    /**
     * @generated from protobuf field: string session_id = 3;
     */
    sessionId: string;
}
/**
 * @generated from protobuf message stream.video.sfu.models.TrackInfo
 */
export interface TrackInfo {
    /**
     * @generated from protobuf field: string track_id = 1;
     */
    trackId: string;
    /**
     * @generated from protobuf field: stream.video.sfu.models.TrackType track_type = 2;
     */
    trackType: TrackType;
    /**
     * @generated from protobuf field: repeated stream.video.sfu.models.VideoLayer layers = 5;
     */
    layers: VideoLayer[];
    /**
     * @generated from protobuf field: string mid = 6;
     */
    mid: string;
    /**
     * for audio tracks
     *
     * @generated from protobuf field: bool dtx = 7;
     */
    dtx: boolean;
    /**
     * @generated from protobuf field: bool stereo = 8;
     */
    stereo: boolean;
    /**
     * @generated from protobuf field: bool red = 9;
     */
    red: boolean;
}
/**
 * todo remove this
 *
 * @generated from protobuf message stream.video.sfu.models.Call
 */
export interface Call {
    /**
     * the call type
     *
     * @generated from protobuf field: string type = 1;
     */
    type: string;
    /**
     * the call id
     *
     * @generated from protobuf field: string id = 2;
     */
    id: string;
    /**
     * the id of the user that created this call
     *
     * @generated from protobuf field: string created_by_user_id = 3;
     */
    createdByUserId: string;
    /**
     * the id of the current host for this call
     *
     * @generated from protobuf field: string host_user_id = 4;
     */
    hostUserId: string;
    /**
     * @generated from protobuf field: google.protobuf.Struct custom = 5;
     */
    custom?: Struct;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 6;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp updated_at = 7;
     */
    updatedAt?: Timestamp;
}
/**
 * @generated from protobuf message stream.video.sfu.models.Error
 */
export interface Error {
    /**
     * @generated from protobuf field: stream.video.sfu.models.ErrorCode code = 1;
     */
    code: ErrorCode;
    /**
     * @generated from protobuf field: string message = 2;
     */
    message: string;
    /**
     * @generated from protobuf field: bool should_retry = 3;
     */
    shouldRetry: boolean;
}
/**
 * @generated from protobuf message stream.video.sfu.models.ClientDetails
 */
export interface ClientDetails {
    /**
     * @generated from protobuf field: stream.video.sfu.models.Sdk sdk = 1;
     */
    sdk?: Sdk;
    /**
     * @generated from protobuf field: stream.video.sfu.models.OS os = 2;
     */
    os?: OS;
    /**
     * @generated from protobuf field: stream.video.sfu.models.Browser browser = 3;
     */
    browser?: Browser;
    /**
     * @generated from protobuf field: stream.video.sfu.models.Device device = 4;
     */
    device?: Device;
}
/**
 * @generated from protobuf message stream.video.sfu.models.Sdk
 */
export interface Sdk {
    /**
     * @generated from protobuf field: stream.video.sfu.models.SdkType type = 1;
     */
    type: SdkType;
    /**
     * @generated from protobuf field: string major = 2;
     */
    major: string;
    /**
     * @generated from protobuf field: string minor = 3;
     */
    minor: string;
    /**
     * @generated from protobuf field: string patch = 4;
     */
    patch: string;
}
/**
 * @generated from protobuf message stream.video.sfu.models.OS
 */
export interface OS {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string version = 2;
     */
    version: string;
    /**
     * @generated from protobuf field: string architecture = 3;
     */
    architecture: string;
}
/**
 * @generated from protobuf message stream.video.sfu.models.Browser
 */
export interface Browser {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string version = 2;
     */
    version: string;
}
/**
 * @generated from protobuf message stream.video.sfu.models.Device
 */
export interface Device {
    /**
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * @generated from protobuf field: string version = 2;
     */
    version: string;
}
/**
 * CallGrants represents the set of permissions given
 * to the user for the current call.
 *
 * @generated from protobuf message stream.video.sfu.models.CallGrants
 */
export interface CallGrants {
    /**
     * @generated from protobuf field: bool can_publish_audio = 1;
     */
    canPublishAudio: boolean;
    /**
     * @generated from protobuf field: bool can_publish_video = 2;
     */
    canPublishVideo: boolean;
    /**
     * @generated from protobuf field: bool can_screenshare = 3;
     */
    canScreenshare: boolean;
}
/**
 * @generated from protobuf enum stream.video.sfu.models.PeerType
 */
export declare enum PeerType {
    /**
     * todo fix me (marcelo)
     *
     * @generated from protobuf enum value: PEER_TYPE_PUBLISHER_UNSPECIFIED = 0;
     */
    PUBLISHER_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: PEER_TYPE_SUBSCRIBER = 1;
     */
    SUBSCRIBER = 1
}
/**
 * @generated from protobuf enum stream.video.sfu.models.ConnectionQuality
 */
export declare enum ConnectionQuality {
    /**
     * @generated from protobuf enum value: CONNECTION_QUALITY_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: CONNECTION_QUALITY_POOR = 1;
     */
    POOR = 1,
    /**
     * @generated from protobuf enum value: CONNECTION_QUALITY_GOOD = 2;
     */
    GOOD = 2,
    /**
     * @generated from protobuf enum value: CONNECTION_QUALITY_EXCELLENT = 3;
     */
    EXCELLENT = 3
}
/**
 * @generated from protobuf enum stream.video.sfu.models.VideoQuality
 */
export declare enum VideoQuality {
    /**
     * @generated from protobuf enum value: VIDEO_QUALITY_LOW_UNSPECIFIED = 0;
     */
    LOW_UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: VIDEO_QUALITY_MID = 1;
     */
    MID = 1,
    /**
     * @generated from protobuf enum value: VIDEO_QUALITY_HIGH = 2;
     */
    HIGH = 2,
    /**
     * @generated from protobuf enum value: VIDEO_QUALITY_OFF = 3;
     */
    OFF = 3
}
/**
 * @generated from protobuf enum stream.video.sfu.models.TrackType
 */
export declare enum TrackType {
    /**
     * @generated from protobuf enum value: TRACK_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: TRACK_TYPE_AUDIO = 1;
     */
    AUDIO = 1,
    /**
     * @generated from protobuf enum value: TRACK_TYPE_VIDEO = 2;
     */
    VIDEO = 2,
    /**
     * @generated from protobuf enum value: TRACK_TYPE_SCREEN_SHARE = 3;
     */
    SCREEN_SHARE = 3,
    /**
     * @generated from protobuf enum value: TRACK_TYPE_SCREEN_SHARE_AUDIO = 4;
     */
    SCREEN_SHARE_AUDIO = 4
}
/**
 * @generated from protobuf enum stream.video.sfu.models.ErrorCode
 */
export declare enum ErrorCode {
    /**
     * @generated from protobuf enum value: ERROR_CODE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACK_NOT_FOUND = 100;
     */
    PUBLISH_TRACK_NOT_FOUND = 100,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACKS_MISMATCH = 101;
     */
    PUBLISH_TRACKS_MISMATCH = 101,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACK_OUT_OF_ORDER = 102;
     */
    PUBLISH_TRACK_OUT_OF_ORDER = 102,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PUBLISH_TRACK_VIDEO_LAYER_NOT_FOUND = 103;
     */
    PUBLISH_TRACK_VIDEO_LAYER_NOT_FOUND = 103,
    /**
     * @generated from protobuf enum value: ERROR_CODE_LIVE_ENDED = 104;
     */
    LIVE_ENDED = 104,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_NOT_FOUND = 200;
     */
    PARTICIPANT_NOT_FOUND = 200,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MIGRATING_OUT = 201;
     */
    PARTICIPANT_MIGRATING_OUT = 201,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MIGRATION_FAILED = 202;
     */
    PARTICIPANT_MIGRATION_FAILED = 202,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MIGRATING = 203;
     */
    PARTICIPANT_MIGRATING = 203,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_RECONNECT_FAILED = 204;
     */
    PARTICIPANT_RECONNECT_FAILED = 204,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PARTICIPANT_MEDIA_TRANSPORT_FAILURE = 205;
     */
    PARTICIPANT_MEDIA_TRANSPORT_FAILURE = 205,
    /**
     * @generated from protobuf enum value: ERROR_CODE_CALL_NOT_FOUND = 300;
     */
    CALL_NOT_FOUND = 300,
    /**
     * @generated from protobuf enum value: ERROR_CODE_REQUEST_VALIDATION_FAILED = 400;
     */
    REQUEST_VALIDATION_FAILED = 400,
    /**
     * @generated from protobuf enum value: ERROR_CODE_UNAUTHENTICATED = 401;
     */
    UNAUTHENTICATED = 401,
    /**
     * @generated from protobuf enum value: ERROR_CODE_PERMISSION_DENIED = 403;
     */
    PERMISSION_DENIED = 403,
    /**
     * @generated from protobuf enum value: ERROR_CODE_TOO_MANY_REQUESTS = 429;
     */
    TOO_MANY_REQUESTS = 429,
    /**
     * @generated from protobuf enum value: ERROR_CODE_INTERNAL_SERVER_ERROR = 500;
     */
    INTERNAL_SERVER_ERROR = 500,
    /**
     * @generated from protobuf enum value: ERROR_CODE_SFU_SHUTTING_DOWN = 600;
     */
    SFU_SHUTTING_DOWN = 600,
    /**
     * @generated from protobuf enum value: ERROR_CODE_SFU_FULL = 700;
     */
    SFU_FULL = 700
}
/**
 * @generated from protobuf enum stream.video.sfu.models.SdkType
 */
export declare enum SdkType {
    /**
     * @generated from protobuf enum value: SDK_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: SDK_TYPE_REACT = 1;
     */
    REACT = 1,
    /**
     * @generated from protobuf enum value: SDK_TYPE_ANGULAR = 2;
     */
    ANGULAR = 2,
    /**
     * @generated from protobuf enum value: SDK_TYPE_ANDROID = 3;
     */
    ANDROID = 3,
    /**
     * @generated from protobuf enum value: SDK_TYPE_IOS = 4;
     */
    IOS = 4,
    /**
     * @generated from protobuf enum value: SDK_TYPE_FLUTTER = 5;
     */
    FLUTTER = 5,
    /**
     * @generated from protobuf enum value: SDK_TYPE_REACT_NATIVE = 6;
     */
    REACT_NATIVE = 6,
    /**
     * @generated from protobuf enum value: SDK_TYPE_UNITY = 7;
     */
    UNITY = 7
}
/**
 * @generated from protobuf enum stream.video.sfu.models.TrackUnpublishReason
 */
export declare enum TrackUnpublishReason {
    /**
     * Default value which is used when the specific reason
     * for muting the track is not known.
     *
     * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Represents user muting their tracks.
     *
     * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_USER_MUTED = 1;
     */
    USER_MUTED = 1,
    /**
     * Represents muting the track because the permission to
     * publish the track has been revoked.
     *
     * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_PERMISSION_REVOKED = 2;
     */
    PERMISSION_REVOKED = 2,
    /**
     * Represents muting the track due to moderation actions.
     * This is different from permission revoked because the
     * participant can unmute themselves here whereas in case
     * of "permission revoke" it is not possible until the
     * call permissions are updated.
     *
     * @generated from protobuf enum value: TRACK_UNPUBLISH_REASON_MODERATION = 3;
     */
    MODERATION = 3
}
/**
 * GoAwayReason represents the reason for the SFU to
 * disconnect the client.
 *
 * @generated from protobuf enum stream.video.sfu.models.GoAwayReason
 */
export declare enum GoAwayReason {
    /**
     * @generated from protobuf enum value: GO_AWAY_REASON_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: GO_AWAY_REASON_SHUTTING_DOWN = 1;
     */
    SHUTTING_DOWN = 1,
    /**
     * @generated from protobuf enum value: GO_AWAY_REASON_REBALANCE = 2;
     */
    REBALANCE = 2
}
/**
 * CallEndedReason represents the reason for the call to end.
 *
 * @generated from protobuf enum stream.video.sfu.models.CallEndedReason
 */
export declare enum CallEndedReason {
    /**
     * @generated from protobuf enum value: CALL_ENDED_REASON_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: CALL_ENDED_REASON_ENDED = 1;
     */
    ENDED = 1,
    /**
     * @generated from protobuf enum value: CALL_ENDED_REASON_LIVE_ENDED = 2;
     */
    LIVE_ENDED = 2,
    /**
     * @generated from protobuf enum value: CALL_ENDED_REASON_KICKED = 3;
     */
    KICKED = 3
}
/**
 * WebsocketReconnectStrategy defines the ws strategies available for handling reconnections.
 *
 * @generated from protobuf enum stream.video.sfu.models.WebsocketReconnectStrategy
 */
export declare enum WebsocketReconnectStrategy {
    /**
     * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Sent after reaching the maximum reconnection attempts, leading to permanent disconnect.
     *
     * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_DISCONNECT = 1;
     */
    DISCONNECT = 1,
    /**
     * SDK should maintaining existing publisher/subscriber pc instances
     * and establish a new WebSocket connection.
     *
     * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_FAST = 2;
     */
    FAST = 2,
    /**
     * SDK should drop existing pc instances and creates a fresh WebSocket connection,
     * ensuring a clean state for the reconnection.
     *
     * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_CLEAN = 3;
     */
    CLEAN = 3,
    /**
     * SDK should obtain new credentials from the coordinator, drops existing pc instances, and initializes
     * a completely new WebSocket connection, ensuring a comprehensive reset.
     *
     * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_FULL = 4;
     */
    FULL = 4,
    /**
     * SDK should migrate to a new SFU instance
     *
     * @generated from protobuf enum value: WEBSOCKET_RECONNECT_STRATEGY_MIGRATE = 5;
     */
    MIGRATE = 5
}
declare class CallState$Type extends MessageType<CallState> {
    constructor();
    create(value?: PartialMessage<CallState>): CallState;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CallState): CallState;
    internalBinaryWrite(message: CallState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.CallState
 */
export declare const CallState: CallState$Type;
declare class ParticipantCount$Type extends MessageType<ParticipantCount> {
    constructor();
    create(value?: PartialMessage<ParticipantCount>): ParticipantCount;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParticipantCount): ParticipantCount;
    internalBinaryWrite(message: ParticipantCount, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.ParticipantCount
 */
export declare const ParticipantCount: ParticipantCount$Type;
declare class Pin$Type extends MessageType<Pin> {
    constructor();
    create(value?: PartialMessage<Pin>): Pin;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Pin): Pin;
    internalBinaryWrite(message: Pin, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Pin
 */
export declare const Pin: Pin$Type;
declare class Participant$Type extends MessageType<Participant> {
    constructor();
    create(value?: PartialMessage<Participant>): Participant;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Participant): Participant;
    internalBinaryWrite(message: Participant, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Participant
 */
export declare const Participant: Participant$Type;
declare class StreamQuality$Type extends MessageType<StreamQuality> {
    constructor();
    create(value?: PartialMessage<StreamQuality>): StreamQuality;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StreamQuality): StreamQuality;
    internalBinaryWrite(message: StreamQuality, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.StreamQuality
 */
export declare const StreamQuality: StreamQuality$Type;
declare class VideoDimension$Type extends MessageType<VideoDimension> {
    constructor();
    create(value?: PartialMessage<VideoDimension>): VideoDimension;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VideoDimension): VideoDimension;
    internalBinaryWrite(message: VideoDimension, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.VideoDimension
 */
export declare const VideoDimension: VideoDimension$Type;
declare class VideoLayer$Type extends MessageType<VideoLayer> {
    constructor();
    create(value?: PartialMessage<VideoLayer>): VideoLayer;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VideoLayer): VideoLayer;
    internalBinaryWrite(message: VideoLayer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.VideoLayer
 */
export declare const VideoLayer: VideoLayer$Type;
declare class Codec$Type extends MessageType<Codec> {
    constructor();
    create(value?: PartialMessage<Codec>): Codec;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Codec): Codec;
    internalBinaryWrite(message: Codec, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Codec
 */
export declare const Codec: Codec$Type;
declare class ICETrickle$Type extends MessageType<ICETrickle> {
    constructor();
    create(value?: PartialMessage<ICETrickle>): ICETrickle;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ICETrickle): ICETrickle;
    internalBinaryWrite(message: ICETrickle, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.ICETrickle
 */
export declare const ICETrickle: ICETrickle$Type;
declare class TrackInfo$Type extends MessageType<TrackInfo> {
    constructor();
    create(value?: PartialMessage<TrackInfo>): TrackInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TrackInfo): TrackInfo;
    internalBinaryWrite(message: TrackInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.TrackInfo
 */
export declare const TrackInfo: TrackInfo$Type;
declare class Call$Type extends MessageType<Call> {
    constructor();
    create(value?: PartialMessage<Call>): Call;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Call): Call;
    internalBinaryWrite(message: Call, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Call
 */
export declare const Call: Call$Type;
declare class Error$Type extends MessageType<Error> {
    constructor();
    create(value?: PartialMessage<Error>): Error;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Error): Error;
    internalBinaryWrite(message: Error, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Error
 */
export declare const Error: Error$Type;
declare class ClientDetails$Type extends MessageType<ClientDetails> {
    constructor();
    create(value?: PartialMessage<ClientDetails>): ClientDetails;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ClientDetails): ClientDetails;
    internalBinaryWrite(message: ClientDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.ClientDetails
 */
export declare const ClientDetails: ClientDetails$Type;
declare class Sdk$Type extends MessageType<Sdk> {
    constructor();
    create(value?: PartialMessage<Sdk>): Sdk;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Sdk): Sdk;
    internalBinaryWrite(message: Sdk, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Sdk
 */
export declare const Sdk: Sdk$Type;
declare class OS$Type extends MessageType<OS> {
    constructor();
    create(value?: PartialMessage<OS>): OS;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OS): OS;
    internalBinaryWrite(message: OS, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.OS
 */
export declare const OS: OS$Type;
declare class Browser$Type extends MessageType<Browser> {
    constructor();
    create(value?: PartialMessage<Browser>): Browser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Browser): Browser;
    internalBinaryWrite(message: Browser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Browser
 */
export declare const Browser: Browser$Type;
declare class Device$Type extends MessageType<Device> {
    constructor();
    create(value?: PartialMessage<Device>): Device;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Device): Device;
    internalBinaryWrite(message: Device, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.Device
 */
export declare const Device: Device$Type;
declare class CallGrants$Type extends MessageType<CallGrants> {
    constructor();
    create(value?: PartialMessage<CallGrants>): CallGrants;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CallGrants): CallGrants;
    internalBinaryWrite(message: CallGrants, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message stream.video.sfu.models.CallGrants
 */
export declare const CallGrants: CallGrants$Type;
export {};
